version: '3.8'

services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=gestor_proyectos
      - POSTGRES_USER=gestor_user
      - POSTGRES_PASSWORD=gestor_password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gestor_user -d gestor_proyectos"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DEBUG=True
      - SECRET_KEY=django-insecure-dev-key-change-in-production
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=gestor_proyectos
      - DB_USER=gestor_user
      - DB_PASSWORD=gestor_password
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"  # Exponer puerto para acceso directo
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - web
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - web
    restart: unless-stopped

volumes:
  postgres_data: 